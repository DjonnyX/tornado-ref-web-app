// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$ta-primary: mat-palette($mat-blue-grey);
$ta-accent: mat-palette($mat-amber, 700, 100, 700);

// The warn palette is optional (defaults to red).
$ta-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$ta-theme: mat-light-theme($ta-primary, $ta-accent, $ta-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($ta-theme);

// Export theme colors
$background-color: #ffffff;
$primary: mat-color($ta-primary);
$primary-100: lighten(mat-color($ta-primary), 50);
$primary-200: lighten(mat-color($ta-primary), 40);
$primary-300: lighten(mat-color($ta-primary), 30);
$primary-400: lighten(mat-color($ta-primary), 20);
$primary-500: lighten(mat-color($ta-primary), 10);
$primary-600: darken(mat-color($ta-primary), 5);
$primary-700: darken(mat-color($ta-primary), 14);
$primary-800: darken(mat-color($ta-primary), 20);
$accent: mat-color($ta-accent);
$accent-700: darken(mat-color($ta-accent), 14);
$accent-800: darken(mat-color($ta-accent), 20);
$warn: mat-color($ta-warn);
$warn-100: lighten(mat-color($ta-warn), 50);
$warn-700: darken(mat-color($ta-warn), 14);
$warn-800: darken(mat-color($ta-warn), 20);
// $instance-node-color: #e7e7e7;
$block-color: lighten($primary, 10);

.mat-checkbox-layout {
    .mat-checkbox-label {
        line-height: 14px;
        white-space: break-spaces;
        word-break: break-word;
    }
}

::ng-deep {
    .color-accent {
        .mat-form-field-appearance-legacy .mat-form-field-legacy {
            color: $accent;
        }
        .mat-form-field-underline {
            background: rgba($accent, 0.42);
        }
        mat-form-field {
            .mat-hint,
            input,
            ::placeholder,
            .mat-form-field-label {
                color: white;
            }
        }
    }

    .color-primary {
        .mat-accent .mat-input-element {
            color: black;
        }

        // .mat-form-field.mat-focused .mat-form-field-label.mat-accent {
        //color: black;
        // }

        .button-close {
            color: black;
        }
    }
}

::ng-deep .mat-form-field-infix {
    width: auto !important;
}

.mat-button,
.mat-raised-button,
.mat-icon-button,
.mat-stroked-button,
.mat-flat-button,
.mat-fab,
.mat-mini-fab {
    font-weight: 700;
}

.mat-button,
.mat-raised-button,
.mat-stroked-button,
.mat-flat-button,
.mat-fab,
.mat-mini-fab {
    border-radius: 3px;
}